/**
 * @fileoverview gRPC-Web generated client stub for zitadel.user.v3alpha
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: zitadel/user/v3alpha/user_service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as zitadel_user_v3alpha_user_service_pb from '../../../zitadel/user/v3alpha/user_service_pb'; // proto import: "zitadel/user/v3alpha/user_service.proto"


export class UserServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorListUsers = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/ListUsers',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.ListUsersRequest,
    zitadel_user_v3alpha_user_service_pb.ListUsersResponse,
    (request: zitadel_user_v3alpha_user_service_pb.ListUsersRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.ListUsersResponse.deserializeBinary
  );

  listUsers(
    request: zitadel_user_v3alpha_user_service_pb.ListUsersRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.ListUsersResponse>;

  listUsers(
    request: zitadel_user_v3alpha_user_service_pb.ListUsersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.ListUsersResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.ListUsersResponse>;

  listUsers(
    request: zitadel_user_v3alpha_user_service_pb.ListUsersRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.ListUsersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/ListUsers',
        request,
        metadata || {},
        this.methodDescriptorListUsers,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/ListUsers',
    request,
    metadata || {},
    this.methodDescriptorListUsers);
  }

  methodDescriptorGetUserByID = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/GetUserByID',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.GetUserByIDRequest,
    zitadel_user_v3alpha_user_service_pb.GetUserByIDResponse,
    (request: zitadel_user_v3alpha_user_service_pb.GetUserByIDRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.GetUserByIDResponse.deserializeBinary
  );

  getUserByID(
    request: zitadel_user_v3alpha_user_service_pb.GetUserByIDRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.GetUserByIDResponse>;

  getUserByID(
    request: zitadel_user_v3alpha_user_service_pb.GetUserByIDRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.GetUserByIDResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.GetUserByIDResponse>;

  getUserByID(
    request: zitadel_user_v3alpha_user_service_pb.GetUserByIDRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.GetUserByIDResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/GetUserByID',
        request,
        metadata || {},
        this.methodDescriptorGetUserByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/GetUserByID',
    request,
    metadata || {},
    this.methodDescriptorGetUserByID);
  }

  methodDescriptorCreateUser = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/CreateUser',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.CreateUserRequest,
    zitadel_user_v3alpha_user_service_pb.CreateUserResponse,
    (request: zitadel_user_v3alpha_user_service_pb.CreateUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.CreateUserResponse.deserializeBinary
  );

  createUser(
    request: zitadel_user_v3alpha_user_service_pb.CreateUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.CreateUserResponse>;

  createUser(
    request: zitadel_user_v3alpha_user_service_pb.CreateUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.CreateUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.CreateUserResponse>;

  createUser(
    request: zitadel_user_v3alpha_user_service_pb.CreateUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.CreateUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/CreateUser',
        request,
        metadata || {},
        this.methodDescriptorCreateUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/CreateUser',
    request,
    metadata || {},
    this.methodDescriptorCreateUser);
  }

  methodDescriptorUpdateUser = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/UpdateUser',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.UpdateUserRequest,
    zitadel_user_v3alpha_user_service_pb.UpdateUserResponse,
    (request: zitadel_user_v3alpha_user_service_pb.UpdateUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.UpdateUserResponse.deserializeBinary
  );

  updateUser(
    request: zitadel_user_v3alpha_user_service_pb.UpdateUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.UpdateUserResponse>;

  updateUser(
    request: zitadel_user_v3alpha_user_service_pb.UpdateUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.UpdateUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.UpdateUserResponse>;

  updateUser(
    request: zitadel_user_v3alpha_user_service_pb.UpdateUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.UpdateUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/UpdateUser',
        request,
        metadata || {},
        this.methodDescriptorUpdateUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/UpdateUser',
    request,
    metadata || {},
    this.methodDescriptorUpdateUser);
  }

  methodDescriptorDeactivateUser = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/DeactivateUser',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.DeactivateUserRequest,
    zitadel_user_v3alpha_user_service_pb.DeactivateUserResponse,
    (request: zitadel_user_v3alpha_user_service_pb.DeactivateUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.DeactivateUserResponse.deserializeBinary
  );

  deactivateUser(
    request: zitadel_user_v3alpha_user_service_pb.DeactivateUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.DeactivateUserResponse>;

  deactivateUser(
    request: zitadel_user_v3alpha_user_service_pb.DeactivateUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.DeactivateUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.DeactivateUserResponse>;

  deactivateUser(
    request: zitadel_user_v3alpha_user_service_pb.DeactivateUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.DeactivateUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/DeactivateUser',
        request,
        metadata || {},
        this.methodDescriptorDeactivateUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/DeactivateUser',
    request,
    metadata || {},
    this.methodDescriptorDeactivateUser);
  }

  methodDescriptorReactivateUser = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/ReactivateUser',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.ReactivateUserRequest,
    zitadel_user_v3alpha_user_service_pb.ReactivateUserResponse,
    (request: zitadel_user_v3alpha_user_service_pb.ReactivateUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.ReactivateUserResponse.deserializeBinary
  );

  reactivateUser(
    request: zitadel_user_v3alpha_user_service_pb.ReactivateUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.ReactivateUserResponse>;

  reactivateUser(
    request: zitadel_user_v3alpha_user_service_pb.ReactivateUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.ReactivateUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.ReactivateUserResponse>;

  reactivateUser(
    request: zitadel_user_v3alpha_user_service_pb.ReactivateUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.ReactivateUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/ReactivateUser',
        request,
        metadata || {},
        this.methodDescriptorReactivateUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/ReactivateUser',
    request,
    metadata || {},
    this.methodDescriptorReactivateUser);
  }

  methodDescriptorLockUser = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/LockUser',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.LockUserRequest,
    zitadel_user_v3alpha_user_service_pb.LockUserResponse,
    (request: zitadel_user_v3alpha_user_service_pb.LockUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.LockUserResponse.deserializeBinary
  );

  lockUser(
    request: zitadel_user_v3alpha_user_service_pb.LockUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.LockUserResponse>;

  lockUser(
    request: zitadel_user_v3alpha_user_service_pb.LockUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.LockUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.LockUserResponse>;

  lockUser(
    request: zitadel_user_v3alpha_user_service_pb.LockUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.LockUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/LockUser',
        request,
        metadata || {},
        this.methodDescriptorLockUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/LockUser',
    request,
    metadata || {},
    this.methodDescriptorLockUser);
  }

  methodDescriptorUnlockUser = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/UnlockUser',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.UnlockUserRequest,
    zitadel_user_v3alpha_user_service_pb.UnlockUserResponse,
    (request: zitadel_user_v3alpha_user_service_pb.UnlockUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.UnlockUserResponse.deserializeBinary
  );

  unlockUser(
    request: zitadel_user_v3alpha_user_service_pb.UnlockUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.UnlockUserResponse>;

  unlockUser(
    request: zitadel_user_v3alpha_user_service_pb.UnlockUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.UnlockUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.UnlockUserResponse>;

  unlockUser(
    request: zitadel_user_v3alpha_user_service_pb.UnlockUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.UnlockUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/UnlockUser',
        request,
        metadata || {},
        this.methodDescriptorUnlockUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/UnlockUser',
    request,
    metadata || {},
    this.methodDescriptorUnlockUser);
  }

  methodDescriptorDeleteUser = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/DeleteUser',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.DeleteUserRequest,
    zitadel_user_v3alpha_user_service_pb.DeleteUserResponse,
    (request: zitadel_user_v3alpha_user_service_pb.DeleteUserRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.DeleteUserResponse.deserializeBinary
  );

  deleteUser(
    request: zitadel_user_v3alpha_user_service_pb.DeleteUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.DeleteUserResponse>;

  deleteUser(
    request: zitadel_user_v3alpha_user_service_pb.DeleteUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.DeleteUserResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.DeleteUserResponse>;

  deleteUser(
    request: zitadel_user_v3alpha_user_service_pb.DeleteUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.DeleteUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/DeleteUser',
        request,
        metadata || {},
        this.methodDescriptorDeleteUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/DeleteUser',
    request,
    metadata || {},
    this.methodDescriptorDeleteUser);
  }

  methodDescriptorSetContactEmail = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/SetContactEmail',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.SetContactEmailRequest,
    zitadel_user_v3alpha_user_service_pb.SetContactEmailResponse,
    (request: zitadel_user_v3alpha_user_service_pb.SetContactEmailRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.SetContactEmailResponse.deserializeBinary
  );

  setContactEmail(
    request: zitadel_user_v3alpha_user_service_pb.SetContactEmailRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.SetContactEmailResponse>;

  setContactEmail(
    request: zitadel_user_v3alpha_user_service_pb.SetContactEmailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.SetContactEmailResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.SetContactEmailResponse>;

  setContactEmail(
    request: zitadel_user_v3alpha_user_service_pb.SetContactEmailRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.SetContactEmailResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/SetContactEmail',
        request,
        metadata || {},
        this.methodDescriptorSetContactEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/SetContactEmail',
    request,
    metadata || {},
    this.methodDescriptorSetContactEmail);
  }

  methodDescriptorVerifyContactEmail = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/VerifyContactEmail',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.VerifyContactEmailRequest,
    zitadel_user_v3alpha_user_service_pb.VerifyContactEmailResponse,
    (request: zitadel_user_v3alpha_user_service_pb.VerifyContactEmailRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.VerifyContactEmailResponse.deserializeBinary
  );

  verifyContactEmail(
    request: zitadel_user_v3alpha_user_service_pb.VerifyContactEmailRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.VerifyContactEmailResponse>;

  verifyContactEmail(
    request: zitadel_user_v3alpha_user_service_pb.VerifyContactEmailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.VerifyContactEmailResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.VerifyContactEmailResponse>;

  verifyContactEmail(
    request: zitadel_user_v3alpha_user_service_pb.VerifyContactEmailRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.VerifyContactEmailResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/VerifyContactEmail',
        request,
        metadata || {},
        this.methodDescriptorVerifyContactEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/VerifyContactEmail',
    request,
    metadata || {},
    this.methodDescriptorVerifyContactEmail);
  }

  methodDescriptorResendContactEmailCode = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/ResendContactEmailCode',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.ResendContactEmailCodeRequest,
    zitadel_user_v3alpha_user_service_pb.ResendContactEmailCodeResponse,
    (request: zitadel_user_v3alpha_user_service_pb.ResendContactEmailCodeRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.ResendContactEmailCodeResponse.deserializeBinary
  );

  resendContactEmailCode(
    request: zitadel_user_v3alpha_user_service_pb.ResendContactEmailCodeRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.ResendContactEmailCodeResponse>;

  resendContactEmailCode(
    request: zitadel_user_v3alpha_user_service_pb.ResendContactEmailCodeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.ResendContactEmailCodeResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.ResendContactEmailCodeResponse>;

  resendContactEmailCode(
    request: zitadel_user_v3alpha_user_service_pb.ResendContactEmailCodeRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.ResendContactEmailCodeResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/ResendContactEmailCode',
        request,
        metadata || {},
        this.methodDescriptorResendContactEmailCode,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/ResendContactEmailCode',
    request,
    metadata || {},
    this.methodDescriptorResendContactEmailCode);
  }

  methodDescriptorSetContactPhone = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/SetContactPhone',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.SetContactPhoneRequest,
    zitadel_user_v3alpha_user_service_pb.SetContactPhoneResponse,
    (request: zitadel_user_v3alpha_user_service_pb.SetContactPhoneRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.SetContactPhoneResponse.deserializeBinary
  );

  setContactPhone(
    request: zitadel_user_v3alpha_user_service_pb.SetContactPhoneRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.SetContactPhoneResponse>;

  setContactPhone(
    request: zitadel_user_v3alpha_user_service_pb.SetContactPhoneRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.SetContactPhoneResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.SetContactPhoneResponse>;

  setContactPhone(
    request: zitadel_user_v3alpha_user_service_pb.SetContactPhoneRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.SetContactPhoneResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/SetContactPhone',
        request,
        metadata || {},
        this.methodDescriptorSetContactPhone,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/SetContactPhone',
    request,
    metadata || {},
    this.methodDescriptorSetContactPhone);
  }

  methodDescriptorVerifyContactPhone = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/VerifyContactPhone',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.VerifyContactPhoneRequest,
    zitadel_user_v3alpha_user_service_pb.VerifyContactPhoneResponse,
    (request: zitadel_user_v3alpha_user_service_pb.VerifyContactPhoneRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.VerifyContactPhoneResponse.deserializeBinary
  );

  verifyContactPhone(
    request: zitadel_user_v3alpha_user_service_pb.VerifyContactPhoneRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.VerifyContactPhoneResponse>;

  verifyContactPhone(
    request: zitadel_user_v3alpha_user_service_pb.VerifyContactPhoneRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.VerifyContactPhoneResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.VerifyContactPhoneResponse>;

  verifyContactPhone(
    request: zitadel_user_v3alpha_user_service_pb.VerifyContactPhoneRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.VerifyContactPhoneResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/VerifyContactPhone',
        request,
        metadata || {},
        this.methodDescriptorVerifyContactPhone,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/VerifyContactPhone',
    request,
    metadata || {},
    this.methodDescriptorVerifyContactPhone);
  }

  methodDescriptorResendContactPhoneCode = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/ResendContactPhoneCode',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.ResendContactPhoneCodeRequest,
    zitadel_user_v3alpha_user_service_pb.ResendContactPhoneCodeResponse,
    (request: zitadel_user_v3alpha_user_service_pb.ResendContactPhoneCodeRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.ResendContactPhoneCodeResponse.deserializeBinary
  );

  resendContactPhoneCode(
    request: zitadel_user_v3alpha_user_service_pb.ResendContactPhoneCodeRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.ResendContactPhoneCodeResponse>;

  resendContactPhoneCode(
    request: zitadel_user_v3alpha_user_service_pb.ResendContactPhoneCodeRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.ResendContactPhoneCodeResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.ResendContactPhoneCodeResponse>;

  resendContactPhoneCode(
    request: zitadel_user_v3alpha_user_service_pb.ResendContactPhoneCodeRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.ResendContactPhoneCodeResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/ResendContactPhoneCode',
        request,
        metadata || {},
        this.methodDescriptorResendContactPhoneCode,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/ResendContactPhoneCode',
    request,
    metadata || {},
    this.methodDescriptorResendContactPhoneCode);
  }

  methodDescriptorAddUsername = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/AddUsername',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.AddUsernameRequest,
    zitadel_user_v3alpha_user_service_pb.AddUsernameResponse,
    (request: zitadel_user_v3alpha_user_service_pb.AddUsernameRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.AddUsernameResponse.deserializeBinary
  );

  addUsername(
    request: zitadel_user_v3alpha_user_service_pb.AddUsernameRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.AddUsernameResponse>;

  addUsername(
    request: zitadel_user_v3alpha_user_service_pb.AddUsernameRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.AddUsernameResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.AddUsernameResponse>;

  addUsername(
    request: zitadel_user_v3alpha_user_service_pb.AddUsernameRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.AddUsernameResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/AddUsername',
        request,
        metadata || {},
        this.methodDescriptorAddUsername,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/AddUsername',
    request,
    metadata || {},
    this.methodDescriptorAddUsername);
  }

  methodDescriptorRemoveUsername = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/RemoveUsername',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.RemoveUsernameRequest,
    zitadel_user_v3alpha_user_service_pb.RemoveUsernameResponse,
    (request: zitadel_user_v3alpha_user_service_pb.RemoveUsernameRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.RemoveUsernameResponse.deserializeBinary
  );

  removeUsername(
    request: zitadel_user_v3alpha_user_service_pb.RemoveUsernameRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.RemoveUsernameResponse>;

  removeUsername(
    request: zitadel_user_v3alpha_user_service_pb.RemoveUsernameRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.RemoveUsernameResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.RemoveUsernameResponse>;

  removeUsername(
    request: zitadel_user_v3alpha_user_service_pb.RemoveUsernameRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.RemoveUsernameResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/RemoveUsername',
        request,
        metadata || {},
        this.methodDescriptorRemoveUsername,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/RemoveUsername',
    request,
    metadata || {},
    this.methodDescriptorRemoveUsername);
  }

  methodDescriptorSetPassword = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/SetPassword',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.SetPasswordRequest,
    zitadel_user_v3alpha_user_service_pb.SetPasswordResponse,
    (request: zitadel_user_v3alpha_user_service_pb.SetPasswordRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.SetPasswordResponse.deserializeBinary
  );

  setPassword(
    request: zitadel_user_v3alpha_user_service_pb.SetPasswordRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.SetPasswordResponse>;

  setPassword(
    request: zitadel_user_v3alpha_user_service_pb.SetPasswordRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.SetPasswordResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.SetPasswordResponse>;

  setPassword(
    request: zitadel_user_v3alpha_user_service_pb.SetPasswordRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.SetPasswordResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/SetPassword',
        request,
        metadata || {},
        this.methodDescriptorSetPassword,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/SetPassword',
    request,
    metadata || {},
    this.methodDescriptorSetPassword);
  }

  methodDescriptorRequestPasswordReset = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/RequestPasswordReset',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.RequestPasswordResetRequest,
    zitadel_user_v3alpha_user_service_pb.RequestPasswordResetResponse,
    (request: zitadel_user_v3alpha_user_service_pb.RequestPasswordResetRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.RequestPasswordResetResponse.deserializeBinary
  );

  requestPasswordReset(
    request: zitadel_user_v3alpha_user_service_pb.RequestPasswordResetRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.RequestPasswordResetResponse>;

  requestPasswordReset(
    request: zitadel_user_v3alpha_user_service_pb.RequestPasswordResetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.RequestPasswordResetResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.RequestPasswordResetResponse>;

  requestPasswordReset(
    request: zitadel_user_v3alpha_user_service_pb.RequestPasswordResetRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.RequestPasswordResetResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/RequestPasswordReset',
        request,
        metadata || {},
        this.methodDescriptorRequestPasswordReset,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/RequestPasswordReset',
    request,
    metadata || {},
    this.methodDescriptorRequestPasswordReset);
  }

  methodDescriptorStartWebAuthNRegistration = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/StartWebAuthNRegistration',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.StartWebAuthNRegistrationRequest,
    zitadel_user_v3alpha_user_service_pb.StartWebAuthNRegistrationResponse,
    (request: zitadel_user_v3alpha_user_service_pb.StartWebAuthNRegistrationRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.StartWebAuthNRegistrationResponse.deserializeBinary
  );

  startWebAuthNRegistration(
    request: zitadel_user_v3alpha_user_service_pb.StartWebAuthNRegistrationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.StartWebAuthNRegistrationResponse>;

  startWebAuthNRegistration(
    request: zitadel_user_v3alpha_user_service_pb.StartWebAuthNRegistrationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.StartWebAuthNRegistrationResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.StartWebAuthNRegistrationResponse>;

  startWebAuthNRegistration(
    request: zitadel_user_v3alpha_user_service_pb.StartWebAuthNRegistrationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.StartWebAuthNRegistrationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/StartWebAuthNRegistration',
        request,
        metadata || {},
        this.methodDescriptorStartWebAuthNRegistration,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/StartWebAuthNRegistration',
    request,
    metadata || {},
    this.methodDescriptorStartWebAuthNRegistration);
  }

  methodDescriptorVerifyWebAuthNRegistration = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/VerifyWebAuthNRegistration',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.VerifyWebAuthNRegistrationRequest,
    zitadel_user_v3alpha_user_service_pb.VerifyWebAuthNRegistrationResponse,
    (request: zitadel_user_v3alpha_user_service_pb.VerifyWebAuthNRegistrationRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.VerifyWebAuthNRegistrationResponse.deserializeBinary
  );

  verifyWebAuthNRegistration(
    request: zitadel_user_v3alpha_user_service_pb.VerifyWebAuthNRegistrationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.VerifyWebAuthNRegistrationResponse>;

  verifyWebAuthNRegistration(
    request: zitadel_user_v3alpha_user_service_pb.VerifyWebAuthNRegistrationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.VerifyWebAuthNRegistrationResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.VerifyWebAuthNRegistrationResponse>;

  verifyWebAuthNRegistration(
    request: zitadel_user_v3alpha_user_service_pb.VerifyWebAuthNRegistrationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.VerifyWebAuthNRegistrationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/VerifyWebAuthNRegistration',
        request,
        metadata || {},
        this.methodDescriptorVerifyWebAuthNRegistration,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/VerifyWebAuthNRegistration',
    request,
    metadata || {},
    this.methodDescriptorVerifyWebAuthNRegistration);
  }

  methodDescriptorCreateWebAuthNRegistrationLink = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/CreateWebAuthNRegistrationLink',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.CreateWebAuthNRegistrationLinkRequest,
    zitadel_user_v3alpha_user_service_pb.CreateWebAuthNRegistrationLinkResponse,
    (request: zitadel_user_v3alpha_user_service_pb.CreateWebAuthNRegistrationLinkRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.CreateWebAuthNRegistrationLinkResponse.deserializeBinary
  );

  createWebAuthNRegistrationLink(
    request: zitadel_user_v3alpha_user_service_pb.CreateWebAuthNRegistrationLinkRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.CreateWebAuthNRegistrationLinkResponse>;

  createWebAuthNRegistrationLink(
    request: zitadel_user_v3alpha_user_service_pb.CreateWebAuthNRegistrationLinkRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.CreateWebAuthNRegistrationLinkResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.CreateWebAuthNRegistrationLinkResponse>;

  createWebAuthNRegistrationLink(
    request: zitadel_user_v3alpha_user_service_pb.CreateWebAuthNRegistrationLinkRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.CreateWebAuthNRegistrationLinkResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/CreateWebAuthNRegistrationLink',
        request,
        metadata || {},
        this.methodDescriptorCreateWebAuthNRegistrationLink,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/CreateWebAuthNRegistrationLink',
    request,
    metadata || {},
    this.methodDescriptorCreateWebAuthNRegistrationLink);
  }

  methodDescriptorRemoveWebAuthNAuthenticator = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/RemoveWebAuthNAuthenticator',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.RemoveWebAuthNAuthenticatorRequest,
    zitadel_user_v3alpha_user_service_pb.RemoveWebAuthNAuthenticatorResponse,
    (request: zitadel_user_v3alpha_user_service_pb.RemoveWebAuthNAuthenticatorRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.RemoveWebAuthNAuthenticatorResponse.deserializeBinary
  );

  removeWebAuthNAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.RemoveWebAuthNAuthenticatorRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.RemoveWebAuthNAuthenticatorResponse>;

  removeWebAuthNAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.RemoveWebAuthNAuthenticatorRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.RemoveWebAuthNAuthenticatorResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.RemoveWebAuthNAuthenticatorResponse>;

  removeWebAuthNAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.RemoveWebAuthNAuthenticatorRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.RemoveWebAuthNAuthenticatorResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/RemoveWebAuthNAuthenticator',
        request,
        metadata || {},
        this.methodDescriptorRemoveWebAuthNAuthenticator,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/RemoveWebAuthNAuthenticator',
    request,
    metadata || {},
    this.methodDescriptorRemoveWebAuthNAuthenticator);
  }

  methodDescriptorStartTOTPRegistration = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/StartTOTPRegistration',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.StartTOTPRegistrationRequest,
    zitadel_user_v3alpha_user_service_pb.StartTOTPRegistrationResponse,
    (request: zitadel_user_v3alpha_user_service_pb.StartTOTPRegistrationRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.StartTOTPRegistrationResponse.deserializeBinary
  );

  startTOTPRegistration(
    request: zitadel_user_v3alpha_user_service_pb.StartTOTPRegistrationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.StartTOTPRegistrationResponse>;

  startTOTPRegistration(
    request: zitadel_user_v3alpha_user_service_pb.StartTOTPRegistrationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.StartTOTPRegistrationResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.StartTOTPRegistrationResponse>;

  startTOTPRegistration(
    request: zitadel_user_v3alpha_user_service_pb.StartTOTPRegistrationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.StartTOTPRegistrationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/StartTOTPRegistration',
        request,
        metadata || {},
        this.methodDescriptorStartTOTPRegistration,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/StartTOTPRegistration',
    request,
    metadata || {},
    this.methodDescriptorStartTOTPRegistration);
  }

  methodDescriptorVerifyTOTPRegistration = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/VerifyTOTPRegistration',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.VerifyTOTPRegistrationRequest,
    zitadel_user_v3alpha_user_service_pb.VerifyTOTPRegistrationResponse,
    (request: zitadel_user_v3alpha_user_service_pb.VerifyTOTPRegistrationRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.VerifyTOTPRegistrationResponse.deserializeBinary
  );

  verifyTOTPRegistration(
    request: zitadel_user_v3alpha_user_service_pb.VerifyTOTPRegistrationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.VerifyTOTPRegistrationResponse>;

  verifyTOTPRegistration(
    request: zitadel_user_v3alpha_user_service_pb.VerifyTOTPRegistrationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.VerifyTOTPRegistrationResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.VerifyTOTPRegistrationResponse>;

  verifyTOTPRegistration(
    request: zitadel_user_v3alpha_user_service_pb.VerifyTOTPRegistrationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.VerifyTOTPRegistrationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/VerifyTOTPRegistration',
        request,
        metadata || {},
        this.methodDescriptorVerifyTOTPRegistration,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/VerifyTOTPRegistration',
    request,
    metadata || {},
    this.methodDescriptorVerifyTOTPRegistration);
  }

  methodDescriptorRemoveTOTPAuthenticator = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/RemoveTOTPAuthenticator',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.RemoveTOTPAuthenticatorRequest,
    zitadel_user_v3alpha_user_service_pb.RemoveTOTPAuthenticatorResponse,
    (request: zitadel_user_v3alpha_user_service_pb.RemoveTOTPAuthenticatorRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.RemoveTOTPAuthenticatorResponse.deserializeBinary
  );

  removeTOTPAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.RemoveTOTPAuthenticatorRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.RemoveTOTPAuthenticatorResponse>;

  removeTOTPAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.RemoveTOTPAuthenticatorRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.RemoveTOTPAuthenticatorResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.RemoveTOTPAuthenticatorResponse>;

  removeTOTPAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.RemoveTOTPAuthenticatorRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.RemoveTOTPAuthenticatorResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/RemoveTOTPAuthenticator',
        request,
        metadata || {},
        this.methodDescriptorRemoveTOTPAuthenticator,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/RemoveTOTPAuthenticator',
    request,
    metadata || {},
    this.methodDescriptorRemoveTOTPAuthenticator);
  }

  methodDescriptorAddOTPSMSAuthenticator = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/AddOTPSMSAuthenticator',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.AddOTPSMSAuthenticatorRequest,
    zitadel_user_v3alpha_user_service_pb.AddOTPSMSAuthenticatorResponse,
    (request: zitadel_user_v3alpha_user_service_pb.AddOTPSMSAuthenticatorRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.AddOTPSMSAuthenticatorResponse.deserializeBinary
  );

  addOTPSMSAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.AddOTPSMSAuthenticatorRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.AddOTPSMSAuthenticatorResponse>;

  addOTPSMSAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.AddOTPSMSAuthenticatorRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.AddOTPSMSAuthenticatorResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.AddOTPSMSAuthenticatorResponse>;

  addOTPSMSAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.AddOTPSMSAuthenticatorRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.AddOTPSMSAuthenticatorResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/AddOTPSMSAuthenticator',
        request,
        metadata || {},
        this.methodDescriptorAddOTPSMSAuthenticator,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/AddOTPSMSAuthenticator',
    request,
    metadata || {},
    this.methodDescriptorAddOTPSMSAuthenticator);
  }

  methodDescriptorVerifyOTPSMSRegistration = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/VerifyOTPSMSRegistration',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.VerifyOTPSMSRegistrationRequest,
    zitadel_user_v3alpha_user_service_pb.VerifyOTPSMSRegistrationResponse,
    (request: zitadel_user_v3alpha_user_service_pb.VerifyOTPSMSRegistrationRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.VerifyOTPSMSRegistrationResponse.deserializeBinary
  );

  verifyOTPSMSRegistration(
    request: zitadel_user_v3alpha_user_service_pb.VerifyOTPSMSRegistrationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.VerifyOTPSMSRegistrationResponse>;

  verifyOTPSMSRegistration(
    request: zitadel_user_v3alpha_user_service_pb.VerifyOTPSMSRegistrationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.VerifyOTPSMSRegistrationResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.VerifyOTPSMSRegistrationResponse>;

  verifyOTPSMSRegistration(
    request: zitadel_user_v3alpha_user_service_pb.VerifyOTPSMSRegistrationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.VerifyOTPSMSRegistrationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/VerifyOTPSMSRegistration',
        request,
        metadata || {},
        this.methodDescriptorVerifyOTPSMSRegistration,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/VerifyOTPSMSRegistration',
    request,
    metadata || {},
    this.methodDescriptorVerifyOTPSMSRegistration);
  }

  methodDescriptorRemoveOTPSMSAuthenticator = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/RemoveOTPSMSAuthenticator',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.RemoveOTPSMSAuthenticatorRequest,
    zitadel_user_v3alpha_user_service_pb.RemoveOTPSMSAuthenticatorResponse,
    (request: zitadel_user_v3alpha_user_service_pb.RemoveOTPSMSAuthenticatorRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.RemoveOTPSMSAuthenticatorResponse.deserializeBinary
  );

  removeOTPSMSAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.RemoveOTPSMSAuthenticatorRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.RemoveOTPSMSAuthenticatorResponse>;

  removeOTPSMSAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.RemoveOTPSMSAuthenticatorRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.RemoveOTPSMSAuthenticatorResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.RemoveOTPSMSAuthenticatorResponse>;

  removeOTPSMSAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.RemoveOTPSMSAuthenticatorRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.RemoveOTPSMSAuthenticatorResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/RemoveOTPSMSAuthenticator',
        request,
        metadata || {},
        this.methodDescriptorRemoveOTPSMSAuthenticator,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/RemoveOTPSMSAuthenticator',
    request,
    metadata || {},
    this.methodDescriptorRemoveOTPSMSAuthenticator);
  }

  methodDescriptorAddOTPEmailAuthenticator = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/AddOTPEmailAuthenticator',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.AddOTPEmailAuthenticatorRequest,
    zitadel_user_v3alpha_user_service_pb.AddOTPEmailAuthenticatorResponse,
    (request: zitadel_user_v3alpha_user_service_pb.AddOTPEmailAuthenticatorRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.AddOTPEmailAuthenticatorResponse.deserializeBinary
  );

  addOTPEmailAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.AddOTPEmailAuthenticatorRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.AddOTPEmailAuthenticatorResponse>;

  addOTPEmailAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.AddOTPEmailAuthenticatorRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.AddOTPEmailAuthenticatorResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.AddOTPEmailAuthenticatorResponse>;

  addOTPEmailAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.AddOTPEmailAuthenticatorRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.AddOTPEmailAuthenticatorResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/AddOTPEmailAuthenticator',
        request,
        metadata || {},
        this.methodDescriptorAddOTPEmailAuthenticator,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/AddOTPEmailAuthenticator',
    request,
    metadata || {},
    this.methodDescriptorAddOTPEmailAuthenticator);
  }

  methodDescriptorVerifyOTPEmailRegistration = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/VerifyOTPEmailRegistration',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.VerifyOTPEmailRegistrationRequest,
    zitadel_user_v3alpha_user_service_pb.VerifyOTPEmailRegistrationResponse,
    (request: zitadel_user_v3alpha_user_service_pb.VerifyOTPEmailRegistrationRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.VerifyOTPEmailRegistrationResponse.deserializeBinary
  );

  verifyOTPEmailRegistration(
    request: zitadel_user_v3alpha_user_service_pb.VerifyOTPEmailRegistrationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.VerifyOTPEmailRegistrationResponse>;

  verifyOTPEmailRegistration(
    request: zitadel_user_v3alpha_user_service_pb.VerifyOTPEmailRegistrationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.VerifyOTPEmailRegistrationResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.VerifyOTPEmailRegistrationResponse>;

  verifyOTPEmailRegistration(
    request: zitadel_user_v3alpha_user_service_pb.VerifyOTPEmailRegistrationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.VerifyOTPEmailRegistrationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/VerifyOTPEmailRegistration',
        request,
        metadata || {},
        this.methodDescriptorVerifyOTPEmailRegistration,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/VerifyOTPEmailRegistration',
    request,
    metadata || {},
    this.methodDescriptorVerifyOTPEmailRegistration);
  }

  methodDescriptorRemoveOTPEmailAuthenticator = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/RemoveOTPEmailAuthenticator',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.RemoveOTPEmailAuthenticatorRequest,
    zitadel_user_v3alpha_user_service_pb.RemoveOTPEmailAuthenticatorResponse,
    (request: zitadel_user_v3alpha_user_service_pb.RemoveOTPEmailAuthenticatorRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.RemoveOTPEmailAuthenticatorResponse.deserializeBinary
  );

  removeOTPEmailAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.RemoveOTPEmailAuthenticatorRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.RemoveOTPEmailAuthenticatorResponse>;

  removeOTPEmailAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.RemoveOTPEmailAuthenticatorRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.RemoveOTPEmailAuthenticatorResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.RemoveOTPEmailAuthenticatorResponse>;

  removeOTPEmailAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.RemoveOTPEmailAuthenticatorRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.RemoveOTPEmailAuthenticatorResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/RemoveOTPEmailAuthenticator',
        request,
        metadata || {},
        this.methodDescriptorRemoveOTPEmailAuthenticator,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/RemoveOTPEmailAuthenticator',
    request,
    metadata || {},
    this.methodDescriptorRemoveOTPEmailAuthenticator);
  }

  methodDescriptorStartIdentityProviderIntent = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/StartIdentityProviderIntent',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.StartIdentityProviderIntentRequest,
    zitadel_user_v3alpha_user_service_pb.StartIdentityProviderIntentResponse,
    (request: zitadel_user_v3alpha_user_service_pb.StartIdentityProviderIntentRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.StartIdentityProviderIntentResponse.deserializeBinary
  );

  startIdentityProviderIntent(
    request: zitadel_user_v3alpha_user_service_pb.StartIdentityProviderIntentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.StartIdentityProviderIntentResponse>;

  startIdentityProviderIntent(
    request: zitadel_user_v3alpha_user_service_pb.StartIdentityProviderIntentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.StartIdentityProviderIntentResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.StartIdentityProviderIntentResponse>;

  startIdentityProviderIntent(
    request: zitadel_user_v3alpha_user_service_pb.StartIdentityProviderIntentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.StartIdentityProviderIntentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/StartIdentityProviderIntent',
        request,
        metadata || {},
        this.methodDescriptorStartIdentityProviderIntent,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/StartIdentityProviderIntent',
    request,
    metadata || {},
    this.methodDescriptorStartIdentityProviderIntent);
  }

  methodDescriptorRetrieveIdentityProviderIntent = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/RetrieveIdentityProviderIntent',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.RetrieveIdentityProviderIntentRequest,
    zitadel_user_v3alpha_user_service_pb.RetrieveIdentityProviderIntentResponse,
    (request: zitadel_user_v3alpha_user_service_pb.RetrieveIdentityProviderIntentRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.RetrieveIdentityProviderIntentResponse.deserializeBinary
  );

  retrieveIdentityProviderIntent(
    request: zitadel_user_v3alpha_user_service_pb.RetrieveIdentityProviderIntentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.RetrieveIdentityProviderIntentResponse>;

  retrieveIdentityProviderIntent(
    request: zitadel_user_v3alpha_user_service_pb.RetrieveIdentityProviderIntentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.RetrieveIdentityProviderIntentResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.RetrieveIdentityProviderIntentResponse>;

  retrieveIdentityProviderIntent(
    request: zitadel_user_v3alpha_user_service_pb.RetrieveIdentityProviderIntentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.RetrieveIdentityProviderIntentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/RetrieveIdentityProviderIntent',
        request,
        metadata || {},
        this.methodDescriptorRetrieveIdentityProviderIntent,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/RetrieveIdentityProviderIntent',
    request,
    metadata || {},
    this.methodDescriptorRetrieveIdentityProviderIntent);
  }

  methodDescriptorAddIDPAuthenticator = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/AddIDPAuthenticator',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.AddIDPAuthenticatorRequest,
    zitadel_user_v3alpha_user_service_pb.AddIDPAuthenticatorResponse,
    (request: zitadel_user_v3alpha_user_service_pb.AddIDPAuthenticatorRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.AddIDPAuthenticatorResponse.deserializeBinary
  );

  addIDPAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.AddIDPAuthenticatorRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.AddIDPAuthenticatorResponse>;

  addIDPAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.AddIDPAuthenticatorRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.AddIDPAuthenticatorResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.AddIDPAuthenticatorResponse>;

  addIDPAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.AddIDPAuthenticatorRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.AddIDPAuthenticatorResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/AddIDPAuthenticator',
        request,
        metadata || {},
        this.methodDescriptorAddIDPAuthenticator,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/AddIDPAuthenticator',
    request,
    metadata || {},
    this.methodDescriptorAddIDPAuthenticator);
  }

  methodDescriptorRemoveIDPAuthenticator = new grpcWeb.MethodDescriptor(
    '/zitadel.user.v3alpha.UserService/RemoveIDPAuthenticator',
    grpcWeb.MethodType.UNARY,
    zitadel_user_v3alpha_user_service_pb.RemoveIDPAuthenticatorRequest,
    zitadel_user_v3alpha_user_service_pb.RemoveIDPAuthenticatorResponse,
    (request: zitadel_user_v3alpha_user_service_pb.RemoveIDPAuthenticatorRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_v3alpha_user_service_pb.RemoveIDPAuthenticatorResponse.deserializeBinary
  );

  removeIDPAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.RemoveIDPAuthenticatorRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_v3alpha_user_service_pb.RemoveIDPAuthenticatorResponse>;

  removeIDPAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.RemoveIDPAuthenticatorRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.RemoveIDPAuthenticatorResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_v3alpha_user_service_pb.RemoveIDPAuthenticatorResponse>;

  removeIDPAuthenticator(
    request: zitadel_user_v3alpha_user_service_pb.RemoveIDPAuthenticatorRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_v3alpha_user_service_pb.RemoveIDPAuthenticatorResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.v3alpha.UserService/RemoveIDPAuthenticator',
        request,
        metadata || {},
        this.methodDescriptorRemoveIDPAuthenticator,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.v3alpha.UserService/RemoveIDPAuthenticator',
    request,
    metadata || {},
    this.methodDescriptorRemoveIDPAuthenticator);
  }

}

