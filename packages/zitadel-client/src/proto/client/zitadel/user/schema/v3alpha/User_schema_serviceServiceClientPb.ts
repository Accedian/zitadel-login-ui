/**
 * @fileoverview gRPC-Web generated client stub for zitadel.user.schema.v3alpha
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: zitadel/user/schema/v3alpha/user_schema_service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as zitadel_user_schema_v3alpha_user_schema_service_pb from '../../../../zitadel/user/schema/v3alpha/user_schema_service_pb'; // proto import: "zitadel/user/schema/v3alpha/user_schema_service.proto"


export class UserSchemaServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorListUserSchemas = new grpcWeb.MethodDescriptor(
    '/zitadel.user.schema.v3alpha.UserSchemaService/ListUserSchemas',
    grpcWeb.MethodType.UNARY,
    zitadel_user_schema_v3alpha_user_schema_service_pb.ListUserSchemasRequest,
    zitadel_user_schema_v3alpha_user_schema_service_pb.ListUserSchemasResponse,
    (request: zitadel_user_schema_v3alpha_user_schema_service_pb.ListUserSchemasRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_schema_v3alpha_user_schema_service_pb.ListUserSchemasResponse.deserializeBinary
  );

  listUserSchemas(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.ListUserSchemasRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_schema_v3alpha_user_schema_service_pb.ListUserSchemasResponse>;

  listUserSchemas(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.ListUserSchemasRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_schema_v3alpha_user_schema_service_pb.ListUserSchemasResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_schema_v3alpha_user_schema_service_pb.ListUserSchemasResponse>;

  listUserSchemas(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.ListUserSchemasRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_schema_v3alpha_user_schema_service_pb.ListUserSchemasResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.schema.v3alpha.UserSchemaService/ListUserSchemas',
        request,
        metadata || {},
        this.methodDescriptorListUserSchemas,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.schema.v3alpha.UserSchemaService/ListUserSchemas',
    request,
    metadata || {},
    this.methodDescriptorListUserSchemas);
  }

  methodDescriptorGetUserSchemaByID = new grpcWeb.MethodDescriptor(
    '/zitadel.user.schema.v3alpha.UserSchemaService/GetUserSchemaByID',
    grpcWeb.MethodType.UNARY,
    zitadel_user_schema_v3alpha_user_schema_service_pb.GetUserSchemaByIDRequest,
    zitadel_user_schema_v3alpha_user_schema_service_pb.GetUserSchemaByIDResponse,
    (request: zitadel_user_schema_v3alpha_user_schema_service_pb.GetUserSchemaByIDRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_schema_v3alpha_user_schema_service_pb.GetUserSchemaByIDResponse.deserializeBinary
  );

  getUserSchemaByID(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.GetUserSchemaByIDRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_schema_v3alpha_user_schema_service_pb.GetUserSchemaByIDResponse>;

  getUserSchemaByID(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.GetUserSchemaByIDRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_schema_v3alpha_user_schema_service_pb.GetUserSchemaByIDResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_schema_v3alpha_user_schema_service_pb.GetUserSchemaByIDResponse>;

  getUserSchemaByID(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.GetUserSchemaByIDRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_schema_v3alpha_user_schema_service_pb.GetUserSchemaByIDResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.schema.v3alpha.UserSchemaService/GetUserSchemaByID',
        request,
        metadata || {},
        this.methodDescriptorGetUserSchemaByID,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.schema.v3alpha.UserSchemaService/GetUserSchemaByID',
    request,
    metadata || {},
    this.methodDescriptorGetUserSchemaByID);
  }

  methodDescriptorCreateUserSchema = new grpcWeb.MethodDescriptor(
    '/zitadel.user.schema.v3alpha.UserSchemaService/CreateUserSchema',
    grpcWeb.MethodType.UNARY,
    zitadel_user_schema_v3alpha_user_schema_service_pb.CreateUserSchemaRequest,
    zitadel_user_schema_v3alpha_user_schema_service_pb.CreateUserSchemaResponse,
    (request: zitadel_user_schema_v3alpha_user_schema_service_pb.CreateUserSchemaRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_schema_v3alpha_user_schema_service_pb.CreateUserSchemaResponse.deserializeBinary
  );

  createUserSchema(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.CreateUserSchemaRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_schema_v3alpha_user_schema_service_pb.CreateUserSchemaResponse>;

  createUserSchema(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.CreateUserSchemaRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_schema_v3alpha_user_schema_service_pb.CreateUserSchemaResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_schema_v3alpha_user_schema_service_pb.CreateUserSchemaResponse>;

  createUserSchema(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.CreateUserSchemaRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_schema_v3alpha_user_schema_service_pb.CreateUserSchemaResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.schema.v3alpha.UserSchemaService/CreateUserSchema',
        request,
        metadata || {},
        this.methodDescriptorCreateUserSchema,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.schema.v3alpha.UserSchemaService/CreateUserSchema',
    request,
    metadata || {},
    this.methodDescriptorCreateUserSchema);
  }

  methodDescriptorUpdateUserSchema = new grpcWeb.MethodDescriptor(
    '/zitadel.user.schema.v3alpha.UserSchemaService/UpdateUserSchema',
    grpcWeb.MethodType.UNARY,
    zitadel_user_schema_v3alpha_user_schema_service_pb.UpdateUserSchemaRequest,
    zitadel_user_schema_v3alpha_user_schema_service_pb.UpdateUserSchemaResponse,
    (request: zitadel_user_schema_v3alpha_user_schema_service_pb.UpdateUserSchemaRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_schema_v3alpha_user_schema_service_pb.UpdateUserSchemaResponse.deserializeBinary
  );

  updateUserSchema(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.UpdateUserSchemaRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_schema_v3alpha_user_schema_service_pb.UpdateUserSchemaResponse>;

  updateUserSchema(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.UpdateUserSchemaRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_schema_v3alpha_user_schema_service_pb.UpdateUserSchemaResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_schema_v3alpha_user_schema_service_pb.UpdateUserSchemaResponse>;

  updateUserSchema(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.UpdateUserSchemaRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_schema_v3alpha_user_schema_service_pb.UpdateUserSchemaResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.schema.v3alpha.UserSchemaService/UpdateUserSchema',
        request,
        metadata || {},
        this.methodDescriptorUpdateUserSchema,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.schema.v3alpha.UserSchemaService/UpdateUserSchema',
    request,
    metadata || {},
    this.methodDescriptorUpdateUserSchema);
  }

  methodDescriptorDeactivateUserSchema = new grpcWeb.MethodDescriptor(
    '/zitadel.user.schema.v3alpha.UserSchemaService/DeactivateUserSchema',
    grpcWeb.MethodType.UNARY,
    zitadel_user_schema_v3alpha_user_schema_service_pb.DeactivateUserSchemaRequest,
    zitadel_user_schema_v3alpha_user_schema_service_pb.DeactivateUserSchemaResponse,
    (request: zitadel_user_schema_v3alpha_user_schema_service_pb.DeactivateUserSchemaRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_schema_v3alpha_user_schema_service_pb.DeactivateUserSchemaResponse.deserializeBinary
  );

  deactivateUserSchema(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.DeactivateUserSchemaRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_schema_v3alpha_user_schema_service_pb.DeactivateUserSchemaResponse>;

  deactivateUserSchema(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.DeactivateUserSchemaRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_schema_v3alpha_user_schema_service_pb.DeactivateUserSchemaResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_schema_v3alpha_user_schema_service_pb.DeactivateUserSchemaResponse>;

  deactivateUserSchema(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.DeactivateUserSchemaRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_schema_v3alpha_user_schema_service_pb.DeactivateUserSchemaResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.schema.v3alpha.UserSchemaService/DeactivateUserSchema',
        request,
        metadata || {},
        this.methodDescriptorDeactivateUserSchema,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.schema.v3alpha.UserSchemaService/DeactivateUserSchema',
    request,
    metadata || {},
    this.methodDescriptorDeactivateUserSchema);
  }

  methodDescriptorReactivateUserSchema = new grpcWeb.MethodDescriptor(
    '/zitadel.user.schema.v3alpha.UserSchemaService/ReactivateUserSchema',
    grpcWeb.MethodType.UNARY,
    zitadel_user_schema_v3alpha_user_schema_service_pb.ReactivateUserSchemaRequest,
    zitadel_user_schema_v3alpha_user_schema_service_pb.ReactivateUserSchemaResponse,
    (request: zitadel_user_schema_v3alpha_user_schema_service_pb.ReactivateUserSchemaRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_schema_v3alpha_user_schema_service_pb.ReactivateUserSchemaResponse.deserializeBinary
  );

  reactivateUserSchema(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.ReactivateUserSchemaRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_schema_v3alpha_user_schema_service_pb.ReactivateUserSchemaResponse>;

  reactivateUserSchema(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.ReactivateUserSchemaRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_schema_v3alpha_user_schema_service_pb.ReactivateUserSchemaResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_schema_v3alpha_user_schema_service_pb.ReactivateUserSchemaResponse>;

  reactivateUserSchema(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.ReactivateUserSchemaRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_schema_v3alpha_user_schema_service_pb.ReactivateUserSchemaResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.schema.v3alpha.UserSchemaService/ReactivateUserSchema',
        request,
        metadata || {},
        this.methodDescriptorReactivateUserSchema,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.schema.v3alpha.UserSchemaService/ReactivateUserSchema',
    request,
    metadata || {},
    this.methodDescriptorReactivateUserSchema);
  }

  methodDescriptorDeleteUserSchema = new grpcWeb.MethodDescriptor(
    '/zitadel.user.schema.v3alpha.UserSchemaService/DeleteUserSchema',
    grpcWeb.MethodType.UNARY,
    zitadel_user_schema_v3alpha_user_schema_service_pb.DeleteUserSchemaRequest,
    zitadel_user_schema_v3alpha_user_schema_service_pb.DeleteUserSchemaResponse,
    (request: zitadel_user_schema_v3alpha_user_schema_service_pb.DeleteUserSchemaRequest) => {
      return request.serializeBinary();
    },
    zitadel_user_schema_v3alpha_user_schema_service_pb.DeleteUserSchemaResponse.deserializeBinary
  );

  deleteUserSchema(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.DeleteUserSchemaRequest,
    metadata?: grpcWeb.Metadata | null): Promise<zitadel_user_schema_v3alpha_user_schema_service_pb.DeleteUserSchemaResponse>;

  deleteUserSchema(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.DeleteUserSchemaRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: zitadel_user_schema_v3alpha_user_schema_service_pb.DeleteUserSchemaResponse) => void): grpcWeb.ClientReadableStream<zitadel_user_schema_v3alpha_user_schema_service_pb.DeleteUserSchemaResponse>;

  deleteUserSchema(
    request: zitadel_user_schema_v3alpha_user_schema_service_pb.DeleteUserSchemaRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: zitadel_user_schema_v3alpha_user_schema_service_pb.DeleteUserSchemaResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/zitadel.user.schema.v3alpha.UserSchemaService/DeleteUserSchema',
        request,
        metadata || {},
        this.methodDescriptorDeleteUserSchema,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/zitadel.user.schema.v3alpha.UserSchemaService/DeleteUserSchema',
    request,
    metadata || {},
    this.methodDescriptorDeleteUserSchema);
  }

}

